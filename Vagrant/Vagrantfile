Vagrant.configure("2") do |config|
    
    config.vm.provider :aws do |aws, override|
        aws.access_key_id = "id"
        aws.secret_access_key = "key"
        aws.ami = "ami-0ac019f4fcb7cb7e6"
        aws.security_groups = ['sg-0e10c4c0b64333b8e']
        aws.keypair_name = "alura-key"
        aws.instance_type = "t2.micro"
        aws.region = "us-east-1"
        aws.subnet_id = "subnet-043f80c9b05ab6240"
        aws.associate_public_ip = true
        override.ssh.username = "ubuntu"
        override.ssh.private_key_path = "/path/to/the/key"
        override.nfs.functional = false
    end

    config.vm.define :db do |db_config|
        db_config.vm.box = "dummy"
        db_config.vm.synced_folder '.', '/vagrant', type: "rsync"
        db_config.vm.provider :aws do |aws_db|
            aws_db.tags = { 'Name' => 'MusicJungle (DB)'}
            aws_db.private_ip_address = "172.31.50.20"
        end
        db_config.vm.provision "shell", path: "puppet/bootstrap.sh"
        db_config.vm.provision "puppet" do |db_provision|
            db_provision.manifests_path = "manifests"
            db_provision.manifest_file = "mysql.pp"
        end
    end

    config.vm.define :web do |web_config|
	    web_config.vm.box = "dummy"
        web_config.vm.synced_folder '.', '/vagrant', type: "rsync"
        web_config.vm.provider :aws do |aws_web|
            aws_web.tags = { 'Name' => 'MusicJungle (WEB)'}
            aws_web.private_ip_address = "172.31.50.10"
        end
        web_config.vm.provision "shell", path: "puppet/bootstrap.sh"
        web_config.vm.provision "puppet" do |web_provision|
            web_provision.manifests_path = "manifests"
            web_provision.manifest_file = "web.pp"
        end
    end

end
